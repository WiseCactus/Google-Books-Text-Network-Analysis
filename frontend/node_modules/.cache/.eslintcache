[{"/Users/Camille/Documents/Projects/text-network/frontend/text-network-app/src/index.js":"1","/Users/Camille/Documents/Projects/text-network/frontend/text-network-app/src/App.js":"2","/Users/Camille/Documents/Projects/text-network/frontend/text-network-app/src/reportWebVitals.js":"3"},{"size":515,"mtime":1669072286853,"results":"4","hashOfConfig":"5"},{"size":3148,"mtime":1669179853280,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1668650871214,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1i9vvo4",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/Camille/Documents/Projects/text-network/frontend/text-network-app/src/index.js",[],[],[],"/Users/Camille/Documents/Projects/text-network/frontend/text-network-app/src/App.js",["20","21","22","23","24","25","26"],[],"import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Index from './index.js';\n\n\nfunction App() {\n  var errorMessage = <hN></hN>\n  const init = {\n    keyword:'',\n    interval:'',\n    startDate:'',\n    endDate:'',\n    numBooks:'',\n    extraWords:'',\n    analysisType:'',\n    language:''\n\n  \n\n  };\n\n  const [values, setValues] = useState(init);\n  \n  const handleChange = (e) => {   \n    console.log(\"v\")             \n    setValues({\n      ...values,                                // spreading the unchanged values\n      [e.target.name]: e.target.value,          // changing the state of *changed value*\n    });\n  };\n\n  const sendData = (e) => {\n    e.preventDefault()\n    const requestOptions = {\n      \n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n   \n      body: JSON.stringify(values)\n  };\n  fetch('http://127.0.0.1:5000/result', requestOptions).\n  then((response) => \n    response.json()).then((result) => \n{\n      console.log(result['response'])\n      if (result['response']!=='Redirecting to the loading page...'){\n        document.getElementById(\"errorMessage\").innerHTML =\"Please input all of the required fields.\"\n       \n    }\n    else{\n      console.log('e')\n    }\n  })\n    \n    //console.log(result['response']))\n};\n  \n//   \n//})\n   \n  \n\n\n\n\n\n  //React.render(element);\n\n  \nreturn (\n  <form action=\"/\">\n      \n      \n      \n    <h1 > (Required) Enter keyword(s) (Separate by spaces)</h1>\n<input type=\"text\" name=\"keyword\" id=\"content\" onChange={handleChange}\n        ></input>\n<form action=\"/\" >\n    <h1  > (Required) Enter interval</h1>\n<input type=\"text\" name=\"interval\" id=\"content\" onChange={handleChange}\n        ></input>\n</form>\n<form action=\"/\">\n    <h1 > (Required) Enter start date</h1>\n<input type=\"text\" name=\"startDate\" id=\"content\" onChange={handleChange}\n        ></input>\n</form>\n<form action=\"/\" >\n    <h1 > (Required) Enter end date</h1>\n<input type=\"text\" name=\"endDate\" id=\"content\" onChange={handleChange}\n      ></input>\n</form>\n<form action=\"/\">\n    <h1> (Required) Enter # of books</h1>\n<input type=\"text\" name=\"numBooks\" id=\"content\" onChange={handleChange}></input>\n</form>\n<form action=\"/\" >\n    <h1> (Optional) Enter extra keywords </h1>\n<input type=\"text\" name=\"extraWords\" id=\"content\" onChange={handleChange}></input>\n</form>\n<form action=\"/\" >\n    <h1> (Optional) Enter analysis type (m-magazines, n-newspapers, b-books)</h1>\n<input type=\"text\" name=\"analysisType\" id=\"content\" onChange={handleChange}></input>\n</form>\n<form action=\"/\" >\n    <h1> (Optional) Enter language </h1>\n<input type=\"text\" name=\"language\" id=\"content\" onChange={handleChange}></input>\n</form>\n\n<input type=\"Submit\" value = \"send form\" name=\"analysisType\" id=\"content\" onClick={sendData}></input>\n<h1 id='errorMessage' style={{color:'red'}}> </h1>\n<h1>Submitted Values</h1>\n      <div>\n    {\n      Object.keys(values).map((key, index) =>  \n        <p key={index}>{key}:{values[key]}</p> \n      )\n    }\n  </div>\n</form>)\n}\n\n// Makes our app component visible in other modules.\nexport default App;\n","/Users/Camille/Documents/Projects/text-network/frontend/text-network-app/src/reportWebVitals.js",[],[],[],{"ruleId":"27","severity":1,"message":"28","line":1,"column":26,"nodeType":"29","messageId":"30","endLine":1,"endColumn":35},{"ruleId":"27","severity":1,"message":"31","line":3,"column":10,"nodeType":"29","messageId":"30","endLine":3,"endColumn":23},{"ruleId":"27","severity":1,"message":"32","line":3,"column":25,"nodeType":"29","messageId":"30","endLine":3,"endColumn":31},{"ruleId":"27","severity":1,"message":"33","line":3,"column":33,"nodeType":"29","messageId":"30","endLine":3,"endColumn":38},{"ruleId":"27","severity":1,"message":"34","line":4,"column":8,"nodeType":"29","messageId":"30","endLine":4,"endColumn":13},{"ruleId":"27","severity":1,"message":"35","line":8,"column":7,"nodeType":"29","messageId":"30","endLine":8,"endColumn":19},{"ruleId":"36","severity":1,"message":"37","line":42,"column":56,"nodeType":"38","messageId":"39","endLine":42,"endColumn":57,"fix":"40"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Index' is defined but never used.","'errorMessage' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"41","text":"42"},[983,987],"\n  ."]